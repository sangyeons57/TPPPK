# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8

# Try to use Docker environment's Java if available
# org.gradle.java.home=/opt/java/openjdk
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. For more details, visit
# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true

# Java toolchain approach: detect local JDK only (disabled auto-download due to potential proxy issues)
org.gradle.java.installations.auto-detect=true
org.gradle.java.installations.auto-download=false

# Environment-independent configuration
# Android SDK will be detected via ANDROID_HOME environment variable
# If ANDROID_HOME is not set, each environment should set it appropriately
# No local.properties file needed - everything is environment-based

# Gradle Wrapper JDK configuration (uncomment and set appropriate path if JAVA_HOME not set)
# IMPORTANT: Android requires JDK 17, even if you have Java 21+ installed
# Common JDK 17 installation paths by environment:

# Linux distributions:
# Ubuntu/Debian: org.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64
# RHEL/CentOS: org.gradle.java.home=/usr/lib/jvm/java-17-openjdk
# Arch Linux: org.gradle.java.home=/usr/lib/jvm/java-17-openjdk
# Docker/Alpine: org.gradle.java.home=/opt/java/openjdk

# macOS:
# Homebrew: org.gradle.java.home=/opt/homebrew/opt/openjdk@17
# System install: org.gradle.java.home=/Library/Java/JavaVirtualMachines/openjdk-17.jdk/Contents/Home
# Eclipse Adoptium: org.gradle.java.home=/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home

# Windows:
# Eclipse Adoptium: org.gradle.java.home=C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.12.7-hotspot
# Oracle JDK: org.gradle.java.home=C:\\Program Files\\Java\\jdk-17
# Microsoft OpenJDK: org.gradle.java.home=C:\\Program Files\\Microsoft\\jdk-17.0.12.7-hotspot

# If you have Java 21+ as system default but need JDK 17 for Android:
# 1. Install JDK 17 alongside your existing Java installation
# 2. Uncomment and set org.gradle.java.home to point to JDK 17 directory
# 3. Keep your system JAVA_HOME pointing to Java 21+ for other projects

# CI/CD environments usually have JAVA_HOME set automatically