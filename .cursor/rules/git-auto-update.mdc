---
description: Describes using the git-process.bat script to automate Git add, commit with a structured message, and push.
globs: 
alwaysApply: false
---
## 통합 Git 워크플로우 배치 스크립트 사용법

이 문서는 `git-process.bat` 스크립트를 사용하여 구조화된 커밋 메시지로 Git 작업을 수행하는 방법을 설명합니다.

### 커밋 메시지 파일 생성

스크립트 실행에 필요한 커밋 메시지 파일을 다음 규칙에 따라 생성합니다.

*   **파일 형식:**
    *   첫 줄: 커밋 제목 (50자 이내 권장)
    *   두 번째 줄: 반드시 빈 줄
    *   세 번째 줄부터: 커밋 본문 (상세 설명, 변경 목록 등, 마크다운 사용 가능)
    *   (선택) 마지막 부분: 관련 이슈 번호 (예: `Closes #123`)

*   **파일 예시 (`commit_message.txt`):**

    ```text
    Feat: 사용자 프로필 기능 추가

    - 프로필 조회 API 구현
    - 프로필 수정 기능 추가 (이름, 자기소개)
    - 관련 테스트 코드 작성

    Resolves #45
    ```

### 스크립트 실행

명령 프롬프트에서 아래 형식으로 스크립트를 실행합니다. 스크립트는 Git 저장소 내부에서 실행해야 합니다.

*   **실행 명령어:**
    ```bash
    .\git-process.bat --content "커밋메시지_파일경로.txt" [--branch 브랜치명] [--remote 원격저장소명]
    ```

### 인수 설명

*   `--content "파일경로.txt"` (필수):
    위에서 생성한 커밋 메시지 파일의 전체 경로를 지정합니다.
*   `--branch 브랜치명` (선택):
    푸시할 브랜치 이름을 지정합니다. 생략 시 현재 브랜치로 푸시를 시도합니다 (최신 Git 필요).
*   `--remote 원격저장소명` (선택):
    푸시할 원격 저장소 이름을 지정합니다. 생략 시 `origin`을 사용합니다.

*   **실행 예시:**
    ```bash
    .\git-process.bat --content "C:\dev\myproject\commit_message.txt" --branch main
    ```

### 주의사항

*   `git add .` 실행: 스크립트는 모든 변경 사항을 스테이징합니다. 실행 전 `git status`로 스테이징될 파일을 확인하세요.
*   파일 형식 준수: `--content`로 지정된 파일은 반드시 설명된 커밋 메시지 형식을 따라야 합니다.
*   푸시 권한 및 충돌: 원격 저장소 푸시 권한이 필요하며, 충돌 발생 시 스크립트가 실패합니다. 수동으로 충돌을 해결해야 합니다.
*   오류 확인: 스크립트 실행 중 오류가 발생하면 콘솔 메시지를 확인하세요.
*   임시 파일 정리: 스크립트는 내부적으로 임시 파일을 사용할 수 있으나, `--content` 인수로 전달된 원본 커밋 메시지 파일 (예: `commit_message.txt`)은 스크립트 실행 후 자동으로 삭제되지 않습니다. 필요에 따라 수동으로 삭제하거나 관리해야 합니다.
