classDiagram
    title Schedule Feature Architecture

    %% Feature Layer (ViewModels)
    subgraph Feature Layer - ViewModels
        direction LR
        namespace ViewModels_ScheduleNS {
            class AddScheduleViewModel {
                -addScheduleUseCase: AddScheduleUseCase
                -getUserParticipatingProjectsUseCase: GetUserParticipatingProjectsUseCase
                +loadAvailableProjects()
                +onSaveClick()
            }
            class EditScheduleViewModel {
                -getScheduleDetailUseCase: GetScheduleDetailUseCase
                -updateScheduleUseCase: UpdateScheduleUseCase
                -deleteScheduleUseCase: DeleteScheduleUseCase
                +loadScheduleDetails(scheduleId: String)
                +onSaveClicked()
            }
            class ScheduleDetailViewModel {
                -getScheduleDetailUseCase: GetScheduleDetailUseCase
                -deleteScheduleUseCase: DeleteScheduleUseCase
                +loadScheduleDetails(scheduleId: String)
                +confirmDelete()
            }
            class Calendar24HourViewModel {
                -getSchedulesForDateUseCase: GetSchedulesForDateUseCase
                -deleteScheduleUseCase: DeleteScheduleUseCase
                +loadSchedules(date: LocalDate)
                +deleteSchedule(scheduleId: String)
            }
        }
    end

    %% Domain Layer (UseCases & Repository Interfaces)
    subgraph Domain Layer
        direction LR
        namespace UseCases_ScheduleNS {
            class AddScheduleUseCase {
                <<Interface>>
                +invoke(schedule: Schedule): CustomResult<Unit, Exception>
            }
            class AddScheduleUseCaseImpl {
                -scheduleRepository: ScheduleRepository
            }
            class GetScheduleDetailUseCase {
                <<Interface>>
                +invoke(scheduleId: String): CustomResult<Schedule, Exception>
            }
            class GetScheduleDetailUseCaseImpl {
                -scheduleRepository: ScheduleRepository
            }
            class UpdateScheduleUseCase {
                <<Interface>>
                +invoke(schedule: Schedule): CustomResult<Unit, Exception>
            }
            class UpdateScheduleUseCaseImpl {
                -scheduleRepository: ScheduleRepository
            }
            class DeleteScheduleUseCase {
                <<Interface>>
                +invoke(scheduleId: String): CustomResult<Unit, Exception>
            }
            class DeleteScheduleUseCaseImpl {
                -scheduleRepository: ScheduleRepository
                -authRepository: AuthRepository
            }
            class GetSchedulesForDateUseCase {
                <<Interface>>
                +invoke(date: LocalDate): Flow<CustomResult<List<Schedule>, Exception>>
            }
            class GetSchedulesForDateUseCaseImpl {
                -scheduleRepository: ScheduleRepository
            }
            class GetScheduleSummaryForMonthUseCase {
                -scheduleRepository: ScheduleRepository
                -authRepository: AuthRepository
                +invoke(yearMonth: YearMonth): CustomResult<Map<Int, Boolean>, Exception>
            }
        }
        namespace UseCases_ProjectNS {
            class GetUserParticipatingProjectsUseCase {
                <<Interface>>
                +invoke(): Flow<CustomResult<List<Project>, Exception>>
            }
            class GetUserParticipatingProjectsUseCaseImpl {
                -projectsWrapperRepository: ProjectsWrapperRepository
                -projectRepository: ProjectRepository
                -authUtil: AuthUtil
            }
        }

        namespace Repositories_DomainNS {
            class ScheduleRepository {
                <<Interface>>
                +createSchedule(schedule: Schedule): CustomResult<String, Exception>
                +getScheduleDetails(scheduleId: String): CustomResult<Schedule, Exception>
                +updateSchedule(schedule: Schedule): CustomResult<Unit, Exception>
                +deleteSchedule(scheduleId: String): CustomResult<Unit, Exception>
                +getSchedulesOnDate(date: LocalDate): Flow<CustomResult<List<Schedule>, Exception>>
                +getScheduleSummaryForMonth(userId: String, yearMonth: YearMonth): CustomResult<Map<Int, Boolean>, Exception>
            }
            class ProjectRepository {
                <<Interface>>
                +getProjectDetails(projectId: String): CustomResult<Project, Exception>
            }
            class ProjectsWrapperRepository {
                <<Interface>>
                +getProjectsWrapperStream(userId: String): Flow<List<CustomResult<ProjectsWrapper, Exception>>>
            }
            class AuthRepository {
                <<Interface>>
                +getCurrentUserSession(): CustomResult<UserSession, Exception>
            }
        }
    end

    %% Data Layer
    subgraph Data Layer
        direction LR
        namespace RepositoryImpl_DataNS {
            class ScheduleRepositoryImpl {
                -scheduleRemoteDataSource: ScheduleRemoteDataSource
            }
            class ProjectRepositoryImpl {
                -projectRemoteDataSource: ProjectRemoteDataSource
                %% Other DS for full ProjectRepo not shown for brevity in this diagram
            }
            class ProjectsWrapperRepositoryImpl {
                -projectsWrapperRemoteDataSource: ProjectsWrapperRemoteDataSource
            }
            class AuthRepositoryImpl {
                -authRemoteDataSource: AuthRemoteDataSource
                -auth: FirebaseAuth
            }
        }

        namespace RemoteDataSources_DataNS {
            class ScheduleRemoteDataSource { <<Interface>> }
            class ProjectRemoteDataSource { <<Interface>> }
            class ProjectsWrapperRemoteDataSource { <<Interface>> }
            class AuthRemoteDataSource { <<Interface>> }
        }

        namespace DataSourceImpl_DataNS {
            class ScheduleRemoteDataSourceImpl { -auth: FirebaseAuth; -firestore: FirebaseFirestore }
            class ProjectRemoteDataSourceImpl { -auth: FirebaseAuth; -firestore: FirebaseFirestore }
            class ProjectsWrapperRemoteDataSourceImpl { -auth: FirebaseAuth; -firestore: FirebaseFirestore }
            class AuthRemoteDataSourceImpl { -auth: FirebaseAuth }
        }
        namespace Utils_DataNS {
            class AuthUtil { +getCurrentUserId(): String }
        }
    end

    %% ===== Relationships =====
    %% ViewModel -> UseCase
    ViewModels_ScheduleNS.AddScheduleViewModel ..> UseCases_ScheduleNS.AddScheduleUseCase
    ViewModels_ScheduleNS.AddScheduleViewModel ..> UseCases_ProjectNS.GetUserParticipatingProjectsUseCase
    ViewModels_ScheduleNS.EditScheduleViewModel ..> UseCases_ScheduleNS.GetScheduleDetailUseCase
    ViewModels_ScheduleNS.EditScheduleViewModel ..> UseCases_ScheduleNS.UpdateScheduleUseCase
    ViewModels_ScheduleNS.EditScheduleViewModel ..> UseCases_ScheduleNS.DeleteScheduleUseCase
    ViewModels_ScheduleNS.ScheduleDetailViewModel ..> UseCases_ScheduleNS.GetScheduleDetailUseCase
    ViewModels_ScheduleNS.ScheduleDetailViewModel ..> UseCases_ScheduleNS.DeleteScheduleUseCase
    ViewModels_ScheduleNS.Calendar24HourViewModel ..> UseCases_ScheduleNS.GetSchedulesForDateUseCase
    ViewModels_ScheduleNS.Calendar24HourViewModel ..> UseCases_ScheduleNS.DeleteScheduleUseCase

    %% UseCase -> Repository Interface
    UseCases_ScheduleNS.AddScheduleUseCaseImpl ..> Repositories_DomainNS.ScheduleRepository
    UseCases_ScheduleNS.GetScheduleDetailUseCaseImpl ..> Repositories_DomainNS.ScheduleRepository
    UseCases_ScheduleNS.UpdateScheduleUseCaseImpl ..> Repositories_DomainNS.ScheduleRepository
    UseCases_ScheduleNS.DeleteScheduleUseCaseImpl ..> Repositories_DomainNS.ScheduleRepository
    UseCases_ScheduleNS.DeleteScheduleUseCaseImpl ..> Repositories_DomainNS.AuthRepository
    UseCases_ScheduleNS.GetSchedulesForDateUseCaseImpl ..> Repositories_DomainNS.ScheduleRepository
    UseCases_ScheduleNS.GetScheduleSummaryForMonthUseCase ..> Repositories_DomainNS.ScheduleRepository
    UseCases_ScheduleNS.GetScheduleSummaryForMonthUseCase ..> Repositories_DomainNS.AuthRepository
    UseCases_ProjectNS.GetUserParticipatingProjectsUseCaseImpl ..> Repositories_DomainNS.ProjectsWrapperRepository
    UseCases_ProjectNS.GetUserParticipatingProjectsUseCaseImpl ..> Repositories_DomainNS.ProjectRepository
    UseCases_ProjectNS.GetUserParticipatingProjectsUseCaseImpl ..> Utils_DataNS.AuthUtil

    UseCases_ScheduleNS.AddScheduleUseCase <|.. UseCases_ScheduleNS.AddScheduleUseCaseImpl
    UseCases_ScheduleNS.GetScheduleDetailUseCase <|.. UseCases_ScheduleNS.GetScheduleDetailUseCaseImpl
    UseCases_ScheduleNS.UpdateScheduleUseCase <|.. UseCases_ScheduleNS.UpdateScheduleUseCaseImpl
    UseCases_ScheduleNS.DeleteScheduleUseCase <|.. UseCases_ScheduleNS.DeleteScheduleUseCaseImpl
    UseCases_ScheduleNS.GetSchedulesForDateUseCase <|.. UseCases_ScheduleNS.GetSchedulesForDateUseCaseImpl
    UseCases_ProjectNS.GetUserParticipatingProjectsUseCase <|.. UseCases_ProjectNS.GetUserParticipatingProjectsUseCaseImpl

    %% Repository Impl -> Repo Interface
    Repositories_DomainNS.ScheduleRepository <|.. RepositoryImpl_DataNS.ScheduleRepositoryImpl
    Repositories_DomainNS.ProjectRepository <|.. RepositoryImpl_DataNS.ProjectRepositoryImpl
    Repositories_DomainNS.ProjectsWrapperRepository <|.. RepositoryImpl_DataNS.ProjectsWrapperRepositoryImpl
    Repositories_DomainNS.AuthRepository <|.. RepositoryImpl_DataNS.AuthRepositoryImpl

    %% Repository Impl -> DataSource Interface
    RepositoryImpl_DataNS.ScheduleRepositoryImpl ..> RemoteDataSources_DataNS.ScheduleRemoteDataSource
    RepositoryImpl_DataNS.ProjectRepositoryImpl ..> RemoteDataSources_DataNS.ProjectRemoteDataSource
    RepositoryImpl_DataNS.ProjectsWrapperRepositoryImpl ..> RemoteDataSources_DataNS.ProjectsWrapperRemoteDataSource
    RepositoryImpl_DataNS.AuthRepositoryImpl ..> RemoteDataSources_DataNS.AuthRemoteDataSource

    %% DataSource Impl -> DS Interface
    RemoteDataSources_DataNS.ScheduleRemoteDataSource <|.. DataSourceImpl_DataNS.ScheduleRemoteDataSourceImpl
    RemoteDataSources_DataNS.ProjectRemoteDataSource <|.. DataSourceImpl_DataNS.ProjectRemoteDataSourceImpl
    RemoteDataSources_DataNS.ProjectsWrapperRemoteDataSource <|.. DataSourceImpl_DataNS.ProjectsWrapperRemoteDataSourceImpl
    RemoteDataSources_DataNS.AuthRemoteDataSource <|.. DataSourceImpl_DataNS.AuthRemoteDataSourceImpl

    note for Utils_DataNS.AuthUtil "Utility for current user ID"
    note for RepositoryImpl_DataNS.ProjectRepositoryImpl "Dependencies simplified for schedule context"
    note for ViewModels_ScheduleNS.EditScheduleViewModel "DeleteScheduleUseCase added for completeness"
