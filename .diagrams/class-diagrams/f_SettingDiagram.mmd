classDiagram
    title Settings Feature Architecture

    %% Feature Layer (ViewModels)
    subgraph Feature Layer - ViewModels
        direction LR
        namespace ViewModels_SettingsNS {
            class SettingsViewModel {
                %% No domain UseCases directly injected in current code
                +onWithdrawAccountClick()
                +confirmWithdrawal() %% Placeholder logic in code
            }
            class ChangePasswordViewModel {
                -requestPasswordResetUseCase: RequestPasswordResetUseCase %% Code uses this
                +changePassword()
            }
            class ChangeNameViewModel {
                -updateNicknameUseCase: UpdateNicknameUseCase
                +updateUserName()
            }
            class MigrationToolViewModel {
                -channelMigrationTool: ChannelMigrationTool
                +startDmMigration()
                +startProjectMigration()
            }
        }
    end

    %% Domain Layer (UseCases & Repository Interfaces)
    subgraph Domain Layer
        direction LR
        namespace UseCases_UserNS {
            class GetCurrentUserStreamUseCase {
                -authRepository: AuthRepository
                -userRepository: UserRepository
                +invoke(): Flow<CustomResult<User, Exception>>
            }
            class UpdateNicknameUseCase {
                -userRepository: UserRepository
                -authRepository: AuthRepository
                +invoke(newNickname: String): CustomResult<User, Exception>
            }
            class CheckNicknameAvailabilityUseCase {
                -userRepository: UserRepository
                +invoke(nickname: String): CustomResult<Boolean, Exception>
            }
        }
        namespace UseCases_AuthNS {
            class RequestPasswordResetUseCase {
                -authRepository: AuthRepository
                +invoke(email: String): CustomResult<Unit, Exception>
            }
            class GetAuthErrorMessageUseCase {
                 +invoke(exception: Exception): String
            }
            %% ChangePasswordUseCase, LogoutUseCase, WithdrawUserUseCase: Not found or not used as per current code analysis
        }

        namespace Repositories_DomainNS {
            class UserRepository { <<Interface>> }
            class AuthRepository { <<Interface>> }
            class ProjectRepository { <<Interface>> }      %% For MigrationTool context
            class ProjectChannelRepository { <<Interface>> } %% For MigrationTool context
            class DMChannelRepository { <<Interface>> }      %% For MigrationTool context
            class CategoryRepository { <<Interface>> }     %% For MigrationTool context
        }
    end

    %% Data Layer
    subgraph Data Layer
        direction LR
        namespace RepositoryImpl_DataNS {
            class UserRepositoryImpl { -userRemoteDataSource: UserRemoteDataSource }
            class AuthRepositoryImpl { -authRemoteDataSource: AuthRemoteDataSource }
            class ProjectRepositoryImpl { -projectRemoteDataSource: ProjectRemoteDataSource }
            class ProjectChannelRepositoryImpl { -projectChannelRemoteDataSource: ProjectChannelRemoteDataSource }
            class DMChannelRepositoryImpl { -dmChannelRemoteDataSource: DMChannelRemoteDataSource }
            class CategoryRepositoryImpl { -categoryRemoteDataSource: CategoryRemoteDataSource }
        }

        namespace RemoteDataSources_DataNS {
            class UserRemoteDataSource { <<Interface>> }
            class AuthRemoteDataSource { <<Interface>> }
            class ProjectRemoteDataSource { <<Interface>> }
            class ProjectChannelRemoteDataSource { <<Interface>> }
            class DMChannelRemoteDataSource { <<Interface>> }
            class CategoryRemoteDataSource { <<Interface>> }
        }

        namespace DataSourceImpl_DataNS {
            class UserRemoteDataSourceImpl { -firestore: FirebaseFirestore; -firebaseAuth: FirebaseAuth }
            class AuthRemoteDataSourceImpl { -firebaseAuth: FirebaseAuth }
            class ProjectRemoteDataSourceImpl { -firestore: FirebaseFirestore }
            class ProjectChannelRemoteDataSourceImpl { -firestore: FirebaseFirestore }
            class DMChannelRemoteDataSourceImpl { -firestore: FirebaseFirestore; -firebaseAuth: FirebaseAuth }
            class CategoryRemoteDataSourceImpl { -firestore: FirebaseFirestore }
        }

        namespace DataComponents_DataNS {
            class ChannelMigrationTool {
                -firestore: FirebaseFirestore
                -auth: FirebaseAuth
                +migrateDmConversations(): Result<MigrationStats>
                +migrateProjectChannels(projectId: String): Result<MigrationStats>
            }
        }
    end

    %% ===== Relationships =====
    %% ViewModel -> UseCase / Data Component
    ViewModels_SettingsNS.ChangePasswordViewModel ..> UseCases_AuthNS.RequestPasswordResetUseCase : uses
    ViewModels_SettingsNS.ChangeNameViewModel ..> UseCases_UserNS.UpdateNicknameUseCase : uses
    ViewModels_SettingsNS.MigrationToolViewModel ..> DataComponents_DataNS.ChannelMigrationTool : uses

    %% UseCase -> Repository Interface
    UseCases_UserNS.GetCurrentUserStreamUseCase ..> Repositories_DomainNS.AuthRepository
    UseCases_UserNS.GetCurrentUserStreamUseCase ..> Repositories_DomainNS.UserRepository
    UseCases_UserNS.UpdateNicknameUseCase ..> Repositories_DomainNS.UserRepository
    UseCases_UserNS.UpdateNicknameUseCase ..> Repositories_DomainNS.AuthRepository
    UseCases_UserNS.CheckNicknameAvailabilityUseCase ..> Repositories_DomainNS.UserRepository
    UseCases_AuthNS.RequestPasswordResetUseCase ..> Repositories_DomainNS.AuthRepository

    %% Repository Impl -> Repo Interface (Illustrative)
    Repositories_DomainNS.UserRepository <|.. RepositoryImpl_DataNS.UserRepositoryImpl
    Repositories_DomainNS.AuthRepository <|.. RepositoryImpl_DataNS.AuthRepositoryImpl

    %% Repository Impl -> DataSource Interface (Illustrative)
    RepositoryImpl_DataNS.UserRepositoryImpl ..> RemoteDataSources_DataNS.UserRemoteDataSource
    RepositoryImpl_DataNS.AuthRepositoryImpl ..> RemoteDataSources_DataNS.AuthRemoteDataSource

    %% DataSource Impl -> DS Interface (Illustrative)
    RemoteDataSources_DataNS.UserRemoteDataSource <|.. DataSourceImpl_DataNS.UserRemoteDataSourceImpl
    RemoteDataSources_DataNS.AuthRemoteDataSource <|.. DataSourceImpl_DataNS.AuthRemoteDataSourceImpl

    note for ViewModels_SettingsNS.ChangePasswordViewModel "Uses RequestPasswordResetUseCase, functionally for password *reset*, not *change*."
    note for ViewModels_SettingsNS.SettingsViewModel "Logout/Withdrawal logic are placeholders in code, not using specific UseCases from original diagram."
    note for DataComponents_DataNS.ChannelMigrationTool "Directly uses Firebase SDKs."
    note "UseCases like LogoutUseCase, WithdrawUserUseCase, ChangePasswordUseCase from original diagram are not found or not used by ViewModels as specified."
    note "MigrationToolViewModel's dependencies on Project/Channel Repositories are indirect via ChannelMigrationTool."
